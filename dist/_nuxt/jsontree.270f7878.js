import{o as e,a as t,b as n,h as A,r as b,i as w,u as d,C as j,F as g,H as D,G as a,l as f,c as C,y as h,t as u,B as S,p as V,m as x,w as I,v as J}from"./entry.90964fe4.js";import{u as F}from"./composables.419673dc.js";const K={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},L=n("path",{fill:"currentColor",d:"m7 10l5 5l5-5z"},null,-1),E=[L];function G(l,r){return e(),t("svg",K,E)}const B={name:"ic-baseline-arrow-drop-down",render:G},H={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},M=n("path",{fill:"currentColor",d:"m10 17l5-5l-5-5v10z"},null,-1),R=[M];function P(l,r){return e(),t("svg",H,R)}const T={name:"ic-baseline-arrow-right",render:P};const v=l=>(V("data-v-1a795d47"),l=l(),x(),l),U={class:"json-tree"},q={key:0},Q={key:0},W={key:0},X=v(()=>n("span",null,"null",-1)),Y=[X],Z={key:1,class:"relative"},ee={class:"flex items-center"},te=["onClick"],se=["onClick"],oe={key:2},ne={key:3},re=v(()=>n("span",{class:"absolute left-16 top-0.5"},"...",-1)),ae={key:2},le={key:0},ie={key:1},ce={key:1},de={key:0},_e={key:0},ue={class:"json-tree-key"},pe=v(()=>n("span",null,": null",-1)),he={key:0},ye={key:1,class:"relative"},fe={class:"json-tree-key"},me=["onClick"],ke=["onClick"],ve={key:2},$e={key:3},je=v(()=>n("span",{class:"absolute left-24 top-0.5"},"...",-1)),be={key:2},we={class:"json-tree-key"},ge={key:0},De={key:1},Ce={__name:"TreeStructure",props:{jsonData:[Object,Array],root:{type:Boolean,default:!0},filterKey:{type:String,default:""}},setup(l){const r=l,i=b([]),m=b(Object.keys(r.jsonData).length);for(let s=0,y=m.value;s<y;s++)i.value.push(!0);const p=w(()=>{const s=r.filterKey&&r.filterKey.toLowerCase();if(s){let y={};return Object.keys(r.jsonData).forEach(o=>{(o.toLowerCase().includes(s)||JSON.stringify(r.jsonData[o]).includes(s))&&(y[o]=r.jsonData[o])}),y}else return r.jsonData}),N=w(()=>Object.keys(p).length-1);function k(s){i.value[s]=!i.value[s],i.value.splice(s,1,i.value[s])}return(s,y)=>{const $=z;return e(),t("div",U,[d(p).constructor===Array?(e(),t("div",q,[l.root?(e(),t("span",Q," [ ")):j("",!0),(e(!0),t(g,null,D(d(p),(o,c)=>(e(),t("div",{class:"root_elem",key:c},[o==null?(e(),t("div",W,Y)):typeof o=="object"?(e(),t("div",Z,[n("span",ee,[i.value[c]?(e(),t("span",{key:0,onClick:_=>k(c),class:"cursor-pointer"},[a(s.$slots,"hide",{},()=>[f(d(B),{style:{"font-size":"2em"}})],!0)],8,te)):(e(),t("span",{key:1,onClick:_=>k(c),class:"cursor-pointer"},[a(s.$slots,"expand",{},()=>[f(d(T),{style:{"font-size":"2em"}})],!0)],8,se)),o.constructor===Array?(e(),t("span",oe," [ ")):(e(),t("span",ne," { "))]),i.value[c]?(e(),C($,{key:0,jsonData:o,root:!1},{expand:h(()=>[a(s.$slots,"expand",{},void 0,!0)]),hide:h(()=>[a(s.$slots,"hide",{},void 0,!0)]),more:h(()=>[a(s.$slots,"more",{},void 0,!0)]),_:2},1032,["jsonData"])):a(s.$slots,"more",{key:1},()=>[re],!0)])):(e(),t("div",ae,[typeof o=="string"?(e(),t("span",le,' "'+u(o)+'" ',1)):(e(),t("span",ie,u(o),1))]))]))),128)),S(" ] ")])):(e(),t("div",ce,[l.root?(e(),t("span",de," { ")):j("",!0),(e(!0),t(g,null,D(d(p),(o,c,_)=>(e(),t("div",{class:"root_elem",key:c},[o==null||o==null?(e(),t("div",_e,[n("span",ue,u(c),1),pe,_!==d(N)?(e(),t("span",he,",")):j("",!0)])):typeof o=="object"?(e(),t("div",ye,[n("span",fe,u(c),1),i.value[_]?(e(),t("span",{key:0,onClick:O=>k(_),class:"cursor-pointer inline-block align-middle"},[a(s.$slots,"hide",{},()=>[f(d(B),{style:{"font-size":"2em"}})],!0)],8,me)):(e(),t("span",{key:1,onClick:O=>k(_),class:"cursor-pointer inline-block align-middle"},[a(s.$slots,"expand",{},()=>[f(d(T),{style:{"font-size":"2em"}})],!0)],8,ke)),o.constructor===Array?(e(),t("span",ve," [ ")):(e(),t("span",$e," { ")),i.value[_]?(e(),C($,{key:4,jsonData:o,root:!1},{expand:h(()=>[a(s.$slots,"expand",{},void 0,!0)]),hide:h(()=>[a(s.$slots,"hide",{},void 0,!0)]),more:h(()=>[a(s.$slots,"more",{},void 0,!0)]),_:2},1032,["jsonData"])):a(s.$slots,"more",{key:5},()=>[je],!0)])):(e(),t("div",be,[n("span",we,u(c),1),typeof o=="string"?(e(),t("span",ge,' "'+u(o)+'" ',1)):(e(),t("span",De,u(o),1))]))]))),128)),S(" } ")]))])}}},z=A(Ce,[["__scopeId","data-v-1a795d47"]]),Se=n("div",{class:"component-header"},[n("h2",null,"Tree structure from json")],-1),Be={class:"px-4 py-2"},Te={class:"flex items-center justify-between mb-3 w-full flex-col"},ze={class:"flex items-center justify-between mb-3 w-full flex-col"},Ne=n("label",{class:"mb-1 font-bold text-white"},"Json to convert",-1),Oe={class:"px-4 bg-blue-400 py-2"},xe={__name:"jsontree",setup(l){const r=b(`{"id":"0001","type":"donut","name":"Cake","ppu":0.55,"batters":{"batter":[{"id":"1001","type":"Regular"},{"id":"1002","type":"Chocolate"},{"id":"1003","type":"Blueberry"},{"id":"1004","type":"Devil's Food"}]},"topping":[{"id":"5001","type":"None"},{"id":"5002","type":"Glazed"},{"id":"5005","type":"Sugar"},{"id":"5007","type":"Powdered Sugar"},{"id":"5006","type":"Chocolate with Sprinkles"},{"id":"5003","type":"Chocolate"},{"id":"5004","type":"Maple"}]}`);return F({title:"Tree structure"}),(i,m)=>(e(),t("div",null,[Se,n("div",Be,[n("div",Te,[n("div",ze,[Ne,I(n("textarea",{"onUpdate:modelValue":m[0]||(m[0]=p=>r.value=p),cols:"30",rows:"10",placeholder:"Json to convert"},null,512),[[J,r.value]])])])]),n("div",Oe,[f(d(z),{jsonData:JSON.parse(r.value)},null,8,["jsonData"])])]))}};export{xe as default};
